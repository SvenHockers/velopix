# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: velopix

on:
  release:
    types: [published]
  workflow_dispatch:   

permissions:
  contents: read
  id-token: write

env:
  CRATE_NAME: "velopix"
  PYTHON_REQUIRES: ">=3.9"

jobs:
  build-and-publish:
    environment: PyPi
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install 'maturin>=1.0,<2.0'

      - name: Install maturin (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install "maturin>=1.0,<2.0"

      - name: Build wheels (release mode)
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
            python -m maturin build --release --manylinux 2014
          else
            python -m maturin build --release
          fi

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__                      
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}   
        run: |
          twine upload target/wheels/*.whl
